/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Test;

import ems.AdminHomePage;
import ems.ConnectionToDatabase;
import ems.FormFillupPage;
import java.awt.Component;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Subhro Ghosh
 */
public class ManageExamCenterPage extends javax.swing.JFrame implements ListSelectionListener
{

    /**
     * Creates new form ManageExamCenterPage
     */
    
    private ConnectionToDatabase cdb;
    private Connection conn;
    
    private DefaultComboBoxModel modelZone;
    private DefaultTableModel modelCenterTable;

    private char AEN;
    private int cidC;
    private int rowC;
    
    public ManageExamCenterPage()
    {
        initComponents();
        
        cdb = new ConnectionToDatabase();
        
        try
        {
            conn = cdb.startConnection();
        } catch (SQLException ex)
        {
//            Logger.getLogger(UserSignUpPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        modelZone = new DefaultComboBoxModel();
        comboZone.setModel(modelZone);
        modelZone.addElement("Select Zone");
        
        String colNames[] = "Center Id,Name,Address,Center No,Zone".split(",");
        modelCenterTable = new DefaultTableModel(colNames, 0);
        tableCenter.setModel(modelCenterTable);
        
        
        try
        {
            populateZone();
            populateCenterTable();
        } catch (SQLException ex)
        {
            System.out.println("No data found");
            Logger.getLogger(ManageExamCenterPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        tableCenter.getSelectionModel().addListSelectionListener(this);
        tableCenter.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
//        tableCenter.setRowSelectionInterval(0, 0);
        
        AEN ='N';
        enableCnterForm(false);
        
        this.setVisible(true);
    }
    
    private void populateZone() throws SQLException
    {
        
        String fetch = "SELECT * FROM ExamZone";

        Statement smt = conn.createStatement();
        ResultSet rs = smt.executeQuery(fetch);

        while(rs.next())
        {
            modelZone.addElement(rs.getString("Name"));
        }
    }
    
    private void populateCenterTable() throws SQLException
    {
        modelCenterTable.setRowCount(0);
        
        String fetch = "SELECT c.Center_ID, c.Name, c.Address, c.Center_No, z.Name  FROM ExamCenter c, ExamZone z WHERE c.Zone_Id = z.Zone_id";

        Statement smt = conn.createStatement();
        ResultSet rs = smt.executeQuery(fetch);

        while(rs.next())
        {
            Object recArr [] = { rs.getInt("c.Center_Id"), rs.getString("c.Name"), rs.getString("c.Address"), rs.getString("c.Center_No"), rs.getString("z.Name")};
            modelCenterTable.addRow(recArr);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        centerPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        comboZone = new javax.swing.JComboBox<>();
        txtCenterName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtCenterAddress = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableCenter = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        txtCenterNo = new javax.swing.JTextField();
        panelCenterBtn = new javax.swing.JPanel();
        btnAddCenter = new javax.swing.JButton();
        btnSaveCenter = new javax.swing.JButton();
        btnDeleteCenter = new javax.swing.JButton();
        btnEditCenter = new javax.swing.JButton();
        btnCancelCenter = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage Exam Center");
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        centerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204), 3), "Manage Exam Center", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Book Antiqua", 0, 24), new java.awt.Color(0, 0, 153))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Select Zone");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Center Name");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Address");

        txtCenterAddress.setColumns(20);
        txtCenterAddress.setRows(5);
        jScrollPane1.setViewportView(txtCenterAddress);

        tableCenter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {

            }
        ));
        jScrollPane3.setViewportView(tableCenter);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("Center No.");

        btnAddCenter.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAddCenter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images&Icons/add-button - Copy.png"))); // NOI18N
        btnAddCenter.setText("Add");
        btnAddCenter.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAddCenterActionPerformed(evt);
            }
        });

        btnSaveCenter.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSaveCenter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images&Icons/save.png"))); // NOI18N
        btnSaveCenter.setText("Save");
        btnSaveCenter.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSaveCenterActionPerformed(evt);
            }
        });

        btnDeleteCenter.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeleteCenter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images&Icons/delete (1).png"))); // NOI18N
        btnDeleteCenter.setText("Delete");
        btnDeleteCenter.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnDeleteCenterActionPerformed(evt);
            }
        });

        btnEditCenter.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEditCenter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images&Icons/edit (1).png"))); // NOI18N
        btnEditCenter.setText("Edit");
        btnEditCenter.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnEditCenterActionPerformed(evt);
            }
        });

        btnCancelCenter.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancelCenter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images&Icons/close.png"))); // NOI18N
        btnCancelCenter.setText("Cancel");
        btnCancelCenter.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCancelCenterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCenterBtnLayout = new javax.swing.GroupLayout(panelCenterBtn);
        panelCenterBtn.setLayout(panelCenterBtnLayout);
        panelCenterBtnLayout.setHorizontalGroup(
            panelCenterBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCenterBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAddCenter)
                .addGap(18, 18, 18)
                .addComponent(btnEditCenter)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteCenter)
                .addGap(18, 18, 18)
                .addComponent(btnSaveCenter)
                .addGap(18, 18, 18)
                .addComponent(btnCancelCenter)
                .addContainerGap())
        );
        panelCenterBtnLayout.setVerticalGroup(
            panelCenterBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCenterBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCenterBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddCenter)
                    .addComponent(btnSaveCenter)
                    .addComponent(btnEditCenter)
                    .addComponent(btnCancelCenter)
                    .addComponent(btnDeleteCenter))
                .addContainerGap())
        );

        javax.swing.GroupLayout centerPanelLayout = new javax.swing.GroupLayout(centerPanel);
        centerPanel.setLayout(centerPanelLayout);
        centerPanelLayout.setHorizontalGroup(
            centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerPanelLayout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(panelCenterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(centerPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCenterNo)
                    .addComponent(jScrollPane1)
                    .addComponent(txtCenterName)
                    .addComponent(comboZone, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        centerPanelLayout.setVerticalGroup(
            centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(centerPanelLayout.createSequentialGroup()
                        .addGroup(centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(comboZone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtCenterName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(centerPanelLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel5))
                            .addGroup(centerPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtCenterNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(panelCenterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(centerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(centerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddCenterActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAddCenterActionPerformed
    {//GEN-HEADEREND:event_btnAddCenterActionPerformed
        // TODO add your handling code here:
        resetCenterForm();
        AEN = 'A';
        enableCnterForm(true);
    }//GEN-LAST:event_btnAddCenterActionPerformed

    private void btnSaveCenterActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSaveCenterActionPerformed
    {//GEN-HEADEREND:event_btnSaveCenterActionPerformed
        // TODO add your handling code here:

        String name = txtCenterName.getText();
        String address = txtCenterAddress.getText();
        String centerNo = txtCenterNo.getText();
        String zone = (String)comboZone.getSelectedItem();

        try
        {
            PreparedStatement psmt =null;
            String query;

            if(AEN == 'A')
            {
                query = "INSERT INTO ExamCenter(Name,Address,Zone_Id,Center_No) "
                + "VALUES(?, ?, (SELECT Zone_Id FROM ExamZone WHERE Name = ?), ?)";

                psmt = conn.prepareStatement(query);

            }

            else if(AEN == 'E')
            {
                query = "UPDATE ExamCenter SET Name = ?, Address = ?, Zone_Id  = (SELECT Zone_Id FROM ExamZone WHERE Name = ?), Center_No = ?"
                + "WHERE Center_Id = ?";

                psmt = conn.prepareStatement(query);

                psmt.setInt(5, cidC);
            }

            psmt.setString(1, name);
            psmt.setString(2, address);
            psmt.setString(3, zone);
            psmt.setString(4, centerNo);

            int count = psmt.executeUpdate();

            if(count>0)
            {
                if(AEN == 'A')
                {
                    populateCenterTable();
                    enableCnterForm(false);
                }
                else if(AEN == 'E')
                {
                    populateCenterTable();
                    enableCnterForm(false);
                }
            }

        } catch (SQLException ex)
        {
            Logger.getLogger(FormFillupPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveCenterActionPerformed

    private void btnDeleteCenterActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnDeleteCenterActionPerformed
    {//GEN-HEADEREND:event_btnDeleteCenterActionPerformed
        // TODO add your handling code here:

        int index = tableCenter.getSelectedRow();
        int nxtInd = index;
        if(index == tableCenter.getRowCount())
            nxtInd = index-1;

        try
        {
            PreparedStatement psmtD = conn.prepareStatement("DELETE FROM ExamCenter WHERE Center_Id = ?");
            psmtD.setInt(1, cidC);

            int n = psmtD.executeUpdate();

            if(n>0)
            {
                resetCenterForm();
                modelCenterTable.removeRow(index);
                tableCenter.getSelectionModel().setSelectionInterval(nxtInd, nxtInd);
            }
            else
            {
                //                JOptionPane.showMessageDialog(this, "Record Not Deleted");
            }

        } catch (SQLException ex)
        {
            //            Logger.getLogger(ManageLibrarianPage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnDeleteCenterActionPerformed

    private void btnEditCenterActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnEditCenterActionPerformed
    {//GEN-HEADEREND:event_btnEditCenterActionPerformed
        // TODO add your handling code here:
        AEN = 'E';
        enableCnterForm(true);
        txtCenterName.requestFocus();
    }//GEN-LAST:event_btnEditCenterActionPerformed

    private void btnCancelCenterActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCancelCenterActionPerformed
    {//GEN-HEADEREND:event_btnCancelCenterActionPerformed
        // TODO add your handling code here:
        enableCnterForm(false);
        populateCenterDetails();
    }//GEN-LAST:event_btnCancelCenterActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        // TODO add your handling code here:
        cdb.closeConnection();
        new AdminHomePage();
        
    }//GEN-LAST:event_formWindowClosing

    @Override
    public void valueChanged(ListSelectionEvent e)
    {
        if(e.getValueIsAdjusting())
            {
                rowC = tableCenter.getSelectedRow();
                cidC = (Integer)modelCenterTable.getValueAt(rowC, 0);
                populateCenterDetails();
            }
    }
    
    private void populateCenterDetails()
    {
        txtCenterName.setText((String) modelCenterTable.getValueAt(rowC, 1));
        txtCenterAddress.setText((String) modelCenterTable.getValueAt(rowC, 2));
        txtCenterNo.setText((String) modelCenterTable.getValueAt(rowC, 3));
        comboZone.setSelectedItem(modelCenterTable.getValueAt(rowC, 4));
    }
    
    
    private void resetCenterForm()
    {
        Component cCenter[] = centerPanel.getComponents();
        for (Component comp : cCenter)
        {
            if(comp instanceof JTextField)
                ((JTextField) comp).setText(" ");
            else if(comp instanceof JComboBox)
                ((JComboBox) comp).setSelectedIndex(0);
        
            txtCenterAddress.setText(" ");
            txtCenterName.requestFocus();
        }
            
    }
    
    private void enableCnterForm(boolean enabled)
    {
        txtCenterName.setEditable(enabled);
        txtCenterNo.setEditable(enabled);
        txtCenterAddress.setEditable(enabled);
        
        comboZone.setEnabled(enabled);
        
        btnAddCenter.setEnabled(!enabled);
        btnEditCenter.setEnabled(!enabled);
        btnDeleteCenter.setEnabled(!enabled);

        btnSaveCenter.setEnabled(enabled);
        btnCancelCenter.setEnabled(enabled);
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(ManageExamCenterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(ManageExamCenterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(ManageExamCenterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(ManageExamCenterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new ManageExamCenterPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCenter;
    private javax.swing.JButton btnCancelCenter;
    private javax.swing.JButton btnDeleteCenter;
    private javax.swing.JButton btnEditCenter;
    private javax.swing.JButton btnSaveCenter;
    private javax.swing.JPanel centerPanel;
    private javax.swing.JComboBox<String> comboZone;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel panelCenterBtn;
    private javax.swing.JTable tableCenter;
    private javax.swing.JTextArea txtCenterAddress;
    private javax.swing.JTextField txtCenterName;
    private javax.swing.JTextField txtCenterNo;
    // End of variables declaration//GEN-END:variables


}
