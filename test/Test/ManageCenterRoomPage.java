/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ems;

import java.awt.Component;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Subhro Ghosh
 */
public class ManageCenterRoomPage extends javax.swing.JFrame implements ListSelectionListener
{

    /**
     * Creates new form ManageCenterRoomPage
     */
    
    private ConnectionToDatabase cdb;
    private Connection conn;
    
    private DefaultComboBoxModel modelCenter;
    
    private DefaultTableModel modelRoomTable;
    
    private char AEN;
    private String rNo;
    private int rowR;
    private int cidR;
    
    public ManageCenterRoomPage()
    {
        initComponents();
        
        cdb = new ConnectionToDatabase();
        
        try
        {
            conn = cdb.startConnection();
        } catch (SQLException ex)
        {
//            Logger.getLogger(UserSignUpPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        modelCenter = new DefaultComboBoxModel();
        comboCenter.setModel(modelCenter);
        modelCenter.addElement("Select Center");
        
        String colNamesRoom[] = "Center Id,Name,Room No,Capacity".split(",");
        modelRoomTable = new DefaultTableModel(colNamesRoom, 0);
        tableRoom.setModel(modelRoomTable);
        

        populateCenter();
        populateRoomTable();

        
        tableRoom.getSelectionModel().addListSelectionListener(this);
        tableRoom.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
//        tableRoom.setRowSelectionInterval(0, 0);
        
        AEN ='N';
        enableRoomForm(false);
        
        this.setVisible(true);
        
    }

    private void populateCenter()
    {
        
        try
        {
            String fetch = "SELECT Name FROM ExamCenter";
            
            Statement smt = conn.createStatement();
            ResultSet rs = smt.executeQuery(fetch);
            
            while(rs.next())
            {
                modelCenter.addElement(rs.getString("Name"));
            }
        } catch (SQLException ex)
        {
            Logger.getLogger(ManageCenterRoomPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void populateRoomTable()
    {
     
        modelRoomTable.setRowCount(0);
        
        String fetch = "SELECT r.Center_ID, c.Name, r.Room_No, r.Capacity FROM ExamCenter c, CenterRoom r WHERE c.Center_Id = r.Center_id";

        Statement smt;
        try
        {
            smt = conn.createStatement();
            ResultSet rs = smt.executeQuery(fetch);

            while(rs.next())
            {
                Object recArr [] = { rs.getInt("r.Center_Id"), rs.getString("c.Name"), rs.getString("r.Room_No"), rs.getInt("r.Capacity")};
                modelRoomTable.addRow(recArr);
            }
        } catch (SQLException ex)
        {
            
            Logger.getLogger(ManageCenterRoomPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        roomPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        comboCenter = new javax.swing.JComboBox<>();
        txtRoomNo = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        tableRoom = new javax.swing.JTable();
        txtCapacity = new javax.swing.JTextField();
        panelRoomBtn = new javax.swing.JPanel();
        btnDeleteRoom = new javax.swing.JButton();
        btnEditRoom = new javax.swing.JButton();
        btnCancelRoom = new javax.swing.JButton();
        btnAddRoom = new javax.swing.JButton();
        btnSaveRoom = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage Center Room");
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        roomPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 0), 3), "Manage Center Room", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Book Antiqua", 0, 24), new java.awt.Color(204, 0, 0))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Select Center");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Room No.");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("Capacity");

        jScrollPane5.setViewportView(tableRoom);

        btnDeleteRoom.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeleteRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images&Icons/delete (1).png"))); // NOI18N
        btnDeleteRoom.setText("Delete");
        btnDeleteRoom.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnDeleteRoomActionPerformed(evt);
            }
        });

        btnEditRoom.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEditRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images&Icons/edit (1).png"))); // NOI18N
        btnEditRoom.setText("Edit");
        btnEditRoom.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnEditRoomActionPerformed(evt);
            }
        });

        btnCancelRoom.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancelRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images&Icons/close.png"))); // NOI18N
        btnCancelRoom.setText("Cancel");
        btnCancelRoom.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCancelRoomActionPerformed(evt);
            }
        });

        btnAddRoom.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAddRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images&Icons/add-button - Copy.png"))); // NOI18N
        btnAddRoom.setText("Add");
        btnAddRoom.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAddRoomActionPerformed(evt);
            }
        });

        btnSaveRoom.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSaveRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images&Icons/save.png"))); // NOI18N
        btnSaveRoom.setText("Save");
        btnSaveRoom.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSaveRoomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRoomBtnLayout = new javax.swing.GroupLayout(panelRoomBtn);
        panelRoomBtn.setLayout(panelRoomBtnLayout);
        panelRoomBtnLayout.setHorizontalGroup(
            panelRoomBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRoomBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAddRoom)
                .addGap(18, 18, 18)
                .addComponent(btnEditRoom)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteRoom)
                .addGap(18, 18, 18)
                .addComponent(btnSaveRoom)
                .addGap(18, 18, 18)
                .addComponent(btnCancelRoom)
                .addContainerGap())
        );
        panelRoomBtnLayout.setVerticalGroup(
            panelRoomBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRoomBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRoomBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddRoom)
                    .addComponent(btnSaveRoom)
                    .addComponent(btnEditRoom)
                    .addComponent(btnCancelRoom)
                    .addComponent(btnDeleteRoom))
                .addContainerGap())
        );

        javax.swing.GroupLayout roomPanelLayout = new javax.swing.GroupLayout(roomPanel);
        roomPanel.setLayout(roomPanelLayout);
        roomPanelLayout.setHorizontalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtRoomNo)
                    .addComponent(comboCenter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(panelRoomBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        roomPanelLayout.setVerticalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roomPanelLayout.createSequentialGroup()
                        .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(comboCenter, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(panelRoomBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(roomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(roomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteRoomActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnDeleteRoomActionPerformed
    {//GEN-HEADEREND:event_btnDeleteRoomActionPerformed
        // TODO add your handling code here:
        int index = tableRoom.getSelectedRow();
        int nxtInd = index;
        if(index == tableRoom.getRowCount())
        nxtInd = index-1;

        try
        {
            PreparedStatement psmtD = conn.prepareStatement("DELETE FROM CenterRoom WHERE Center_Id = ?");
            psmtD.setInt(1, cidR);

            int n = psmtD.executeUpdate();

            if(n>0)
            {
                resetRoomForm();
                modelRoomTable.removeRow(index);
                tableRoom.getSelectionModel().setSelectionInterval(nxtInd, nxtInd);
            }
            else
            {
                //                JOptionPane.showMessageDialog(this, "Record Not Deleted");
            }

        } catch (SQLException ex)
        {
            //            Logger.getLogger(ManageLibrarianPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteRoomActionPerformed

    private void btnEditRoomActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnEditRoomActionPerformed
    {//GEN-HEADEREND:event_btnEditRoomActionPerformed
        // TODO add your handling code here:
        AEN = 'E';
        enableRoomForm(true);
        txtRoomNo.requestFocus();
    }//GEN-LAST:event_btnEditRoomActionPerformed

    private void btnCancelRoomActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCancelRoomActionPerformed
    {//GEN-HEADEREND:event_btnCancelRoomActionPerformed
        // TODO add your handling code here:
        enableRoomForm(false);
        populateRoomDetails();
    }//GEN-LAST:event_btnCancelRoomActionPerformed

    private void btnAddRoomActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAddRoomActionPerformed
    {//GEN-HEADEREND:event_btnAddRoomActionPerformed
        // TODO add your handling code here:
        resetRoomForm();
        AEN = 'A';
        enableRoomForm(true);
    }//GEN-LAST:event_btnAddRoomActionPerformed

    private void btnSaveRoomActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSaveRoomActionPerformed
    {//GEN-HEADEREND:event_btnSaveRoomActionPerformed
        // TODO add your handling code here:
        String roomNo = txtRoomNo.getText();
        int cap = Integer.parseInt(txtCapacity.getText());
        String center = (String)comboCenter.getSelectedItem();

        PreparedStatement psmt = null;
        String query ;

        try
        {

            if(AEN == 'A')
            {
                query = "INSERT INTO CenterRoom(Center_Id,Room_No,Capacity) "
                + "VALUES((SELECT Center_Id FROM ExamCenter WHERE Name = ?), ?, ?)";

                psmt = conn.prepareStatement(query);
            }
            else if(AEN == 'E')
            {
                query = "UPDATE CenterRoom SET Center_id  = (SELECT Center_Id FROM ExamCenter WHERE Name = ?), Room_No = ?, Capacity = ? "
                + "WHERE Center_Id = ? AND Room_No = ?";

                psmt = conn.prepareStatement(query);

                psmt.setInt(4, cidR);
                psmt.setString(5, rNo);
            }

            psmt.setString(1, center);
            psmt.setString(2, roomNo);
            psmt.setInt(3, cap);

            int count = psmt.executeUpdate();

            if(count>0)
            {

                if(AEN == 'A')
                {

                    populateRoomTable();
                    enableRoomForm(false);
                }
                else if(AEN == 'E')
                {
                    populateRoomTable();
                    enableRoomForm(false);
                }
            }

        } catch (SQLException ex)
        {
            Logger.getLogger(ManageExamCenterAndRoomPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveRoomActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        // TODO add your handling code here:
        cdb.closeConnection();
        new AdminHomePage();
    }//GEN-LAST:event_formWindowClosing

    @Override
    public void valueChanged(ListSelectionEvent e)
    {
        if(e.getValueIsAdjusting())
        {
            rowR = tableRoom.getSelectedRow();
            cidR = (Integer)modelRoomTable.getValueAt(rowR, 0);
            populateRoomDetails();
        }
    }
    
    private void populateRoomDetails()
    {
        comboCenter.setSelectedItem(modelRoomTable.getValueAt(rowR, 1));
        rNo  = (String) modelRoomTable.getValueAt(rowR, 2);
        txtRoomNo.setText(rNo);
        txtCapacity.setText((Integer) modelRoomTable.getValueAt(rowR, 3)+"");
    }
    
    private void resetRoomForm()
    {
        Component cCenter[] = roomPanel.getComponents();
        for (Component comp : cCenter)
        {
            if(comp instanceof JTextField)
                ((JTextField) comp).setText(" ");
            else if(comp instanceof JComboBox)
                ((JComboBox) comp).setSelectedIndex(0);
        
            txtRoomNo.requestFocus();
        }
            
    }
    
    private void enableRoomForm(boolean enabled)
    {
        txtRoomNo.setEditable(enabled);
        txtCapacity.setEditable(enabled);
        
        comboCenter.setEnabled(enabled);
        
        btnAddRoom.setEnabled(!enabled);
        btnEditRoom.setEnabled(!enabled);
        btnDeleteRoom.setEnabled(!enabled);

        btnSaveRoom.setEnabled(enabled);
        btnCancelRoom.setEnabled(enabled);
        
    }  
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(ManageCenterRoomPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(ManageCenterRoomPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(ManageCenterRoomPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(ManageCenterRoomPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new ManageCenterRoomPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRoom;
    private javax.swing.JButton btnCancelRoom;
    private javax.swing.JButton btnDeleteRoom;
    private javax.swing.JButton btnEditRoom;
    private javax.swing.JButton btnSaveRoom;
    private javax.swing.JComboBox<String> comboCenter;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPanel panelRoomBtn;
    private javax.swing.JPanel roomPanel;
    private javax.swing.JTable tableRoom;
    private javax.swing.JTextField txtCapacity;
    private javax.swing.JTextField txtRoomNo;
    // End of variables declaration//GEN-END:variables


}
